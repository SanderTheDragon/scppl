// SPDX-FileCopyrightText: 2021-2022 SanderTheDragon <sanderthedragon@zoho.com>
//
// SPDX-License-Identifier: LGPL-3.0-or-later

/**
 * @file Platform.hpp
 *
 * @brief Platform identification constants, based on the data from
 *        https://sourceforge.net/p/predef/wiki.
 *
 * @warning This file is generated by "generate_platorm.py" and may contain
 *          slightly wrong or outdated data. Any edits to this file could be
 *          overwritten.
 *
 * @note This file was generated on {{now}}.
 */

#ifndef SCPPL_OS_PLATFORM_HPP_
#define SCPPL_OS_PLATFORM_HPP_

namespace scppl {

{%- macro platform_items(title, macro, items, note=None) %}

/**
 * @page {{ macro }} {{ title }}
 *
 * The following {{ title|lower }} are defined along with their name in
 * `SCPPL_{{ macro }}_NAME`.
 *
{%- for ( identifier, data ) in items %}
 * - `SCPPL_{{ macro }}_{{ identifier|macrofy }}` for "{{ data['name'] }}".
{%- endfor %}
 *
 * If there is no match, `SCPPL_{{ macro }}_UNKNOWN` is defined, with the name
 * "Unknown".
{%- if note %}
 *
{{ note }}
{%- endif %}
 */

/// @cond

// NOLINTBEGIN(cppcoreguidelines-macro-usage): Allow macro definitions
{%- for ( identifier, data ) in items %}
    {%- if loop.first %}
#if {{ data['identifiers']|defined(4) }}
    {%- else %}
#elif {{ data['identifiers']|defined(6) }}
    {%- endif %}
#define SCPPL_{{ macro }}_{{ identifier|macrofy }}
    {%- for extra in data['extra'] %}
#define SCPPL_{{ macro }}_{{ extra }}
    {%- endfor %}
#define SCPPL_{{ macro }}_NAME "{{ data['name'] }}"
{%- endfor %}
#else
#define SCPPL_{{ macro }}_UNKNOWN
#define SCPPL_{{ macro }}_NAME "Unknown"
#endif
// NOLINTEND(cppcoreguidelines-macro-usage)

/// @endcond

{%- endmacro %}

{{- platform_items('Operating Systems', 'OS', os.items(), '''
 * Operating systems based on another will define a base macro as well, since
 * this is done manually, it may be out of date if the source documentation is
 * updated.
 *
 * The following base macros can be defined:
 *
 * - `SCPPL_OS_UNIX` for UNIX.
 * - `SCPPL_OS_LINUX` for Linux (also defines `SCPPL_OS_UNIX`).
 * - `SCPPL_OS_BSD` for BSD (also defines `SCPPL_OS_UNIX`).
'''.strip('\n')) }}

{{- platform_items('Architectures', 'ARCH', arch.items()) }}

}

#endif
